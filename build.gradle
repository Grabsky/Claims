plugins {
    id("java-library")
    id("xyz.jpenilla.run-paper") version "3.0.2"
    id("de.eldoria.plugin-yml.paper") version "0.8.0"
    //id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.19"
}

final String VERSION = "1.21.8"
final String RUN_NUMBER = System.getenv("GITHUB_RUN_NUMBER") ?: "DEV"

group = "cloud.grabsky"
version = "$VERSION+$RUN_NUMBER"

repositories {
    mavenLocal()
    mavenCentral()
    // Repository for the Paper API.
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    // Repository for the WorldEdit and WorldGuard APIs.
    maven { url = "https://maven.enginehub.org/repo/" }
    // Repository for the PlaceholderAPI, API.
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    // Repository containing the 'PacketEvents' dependency.
    maven { url = "https://repo.codemc.io/repository/maven-releases" }
    // Repository containing 'BlueMap' dependency.
    maven { url = "https://repo.bluecolored.de/releases" }
    // Repository containing all my libraries.
    maven { url = "https://vela.grabsky.workers.dev/releases" }
}

dependencies {
    // https://github.com/projectlombok/lombok
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    // https://github.com/PaperMC/Paper
    paperweight.paperDevBundle("1.21.8-R0.1-SNAPSHOT")
    // https://github.com/Grabsky/bedrock
    paperLibrary("cloud.grabsky:bedrock:1.21-67")
    // https://github.com/Grabsky/commands
    paperLibrary("cloud.grabsky:commands:1.20.1-40")
    // https://github.com/Grabsky/configuration
    paperLibrary("cloud.grabsky:configuration-paper:1.21.4-55")
    // https://github.com/EngineHub/WorldGuard
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.9-SNAPSHOT")
    // https://github.com/Grabsky/Azure
    compileOnly("cloud.grabsky:azure-api:1.21.8-145") {
        exclude group: "cloud.grabsky", module: "bedrock"
    }
    // https://github.com/PlaceholderAPI/PlaceholderAPI
    compileOnly("me.clip:placeholderapi:2.11.6")
    // https://github.com/retrooper/packetevents
    compileOnly("com.github.retrooper:packetevents-spigot:2.9.4")
    // https://github.com/BlueMap-Minecraft/BlueMap
    compileOnly("de.bluecolored:bluemap-api:2.7.4")
}

tasks {
    runServer {
        minecraftVersion("1.21.8")
        jvmArgs("--enable-preview")
    }
    compileJava {
        options.fork = true
        options.compilerArgs += "--enable-preview"
        // Setting compatibility to Java 21 (above should work too).
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }
}

paper {
    main = "cloud.grabsky.claims.Claims"
    loader = "cloud.grabsky.claims.Claims\$PluginLoader"
    generateLibrariesJson = true
    apiVersion = "1.21.8"
    serverDependencies {
        "PlaceholderAPI" { load = "BEFORE"; required = true }
        "packetevents"   { load = "BEFORE"; required = true }
        "WorldGuard"     { load = "BEFORE"; required = true }
        "Azure"          { load = "BEFORE"; required = true }
        "BlueMap"        { load = "BEFORE"; required = false }
    }
}

// Configuring runServer task to use JetBrains' JDK 21 for expanded hot-swap features.
tasks.withType(xyz.jpenilla.runtask.task.AbstractRun.class).configureEach {
    javaLauncher = javaToolchains.launcherFor {
        vendor = JvmVendorSpec.JETBRAINS
        languageVersion = JavaLanguageVersion.of(21)
    }
    jvmArgs("-XX:+AllowEnhancedClassRedefinition", "--enable-preview")
}

// Returns formatted release name. (for GitHub Actions)
tasks.register("getRelease", () -> print("$VERSION #$RUN_NUMBER"))

// Returns formatted tag name. (for GitHub Actions)
tasks.register("getTag", () -> print("$VERSION+$RUN_NUMBER"))

