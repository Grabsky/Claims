plugins {
    id("java-library")
    id("net.minecrell.plugin-yml.paper") version "0.6.0"
    id("io.papermc.paperweight.userdev") version "1.7.1"
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

group = "cloud.grabsky"
version = "1.21.1-${System.getenv("GITHUB_RUN_NUMBER") ?: "DEV"}"

repositories {
    mavenLocal()
    mavenCentral()
    // Repository for the Paper API.
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    // Repository for the WorldEdit and WorldGuard APIs.
    maven { url = "https://maven.enginehub.org/repo/" }
    // Repository containing the 'bedrock' dependency.
    maven { url = "https://maven.pkg.github.com/grabsky/bedrock"; fillCredentials(it) }
    // Repository containing the 'configuration' dependency.
    maven { url = "https://maven.pkg.github.com/grabsky/configuration"; fillCredentials(it) }
    // Repository containing the 'commands' dependency.
    maven { url = "https://maven.pkg.github.com/grabsky/commands"; fillCredentials(it) }
    // Repository for the PlaceholderAPI, API.
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    // Repository containing the 'PacketEvents' dependency.
    maven { url = "https://repo.codemc.io/repository/maven-releases" }
}

dependencies {
    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.32")
    annotationProcessor("org.projectlombok:lombok:1.18.32")
    // Paper
    paperweight.paperDevBundle("1.21.1-R0.1-SNAPSHOT")
    // Dependencies
    implementation("cloud.grabsky:bedrock:1.21-63")
    implementation("cloud.grabsky:commands:1.20.1-37")
    implementation("cloud.grabsky:configuration-paper:1.20.1-42")
    // WorldEdit
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.9-SNAPSHOT")
    // Azure
    compileOnly("cloud.grabsky:azure-api:1.20.1-11") { exclude group: "cloud.grabsky", module: "bedrock" }
    // PlaceholderAPI
    compileOnly("me.clip:placeholderapi:2.11.5")
    // PacketEvents
    compileOnly("com.github.retrooper:packetevents-spigot:2.5.0")
}

tasks {
    shadowJar { shadowJar.archiveFileName = "${rootProject.name}-${project.version}.jar" }
    compileJava {
        options.fork = true
        // Setting compatibility to Java 21 (above should work too).
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }
}

paper {
    main = "cloud.grabsky.claims.Claims"
    apiVersion = "1.21.1"
    // Must be open for NMS to work correctly.
    hasOpenClassloader = true
    serverDependencies {
        "PlaceholderAPI" { load = "BEFORE"; required = true }
        "WorldGuard"     { load = "BEFORE"; required = true }
        "Azure"          { load = "BEFORE"; required = true }
    }
}

/* FOR GITHUB ACTIONS */

tasks.register("release") {
    print("${version.toString().split('-')[0]} #${System.getenv("GITHUB_RUN_NUMBER")}")
}

tasks.register("tag") {
    print(version)
}

/* UTILITY METHODS */

private final def fillCredentials(final MavenArtifactRepository repository) {
    repository.credentials {
        username = findProperty("gpr.actor") ?: System.getenv("GITHUB_ACTOR")
        password = findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
    }
}
