plugins {
    id "java-library"
    id "net.minecrell.plugin-yml.paper" version "0.6.0"
    id "io.papermc.paperweight.userdev" version "1.5.11"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

// Environment-specific variables...
final WORKSPACE_BUILDS = System.getenv("WORKSPACE_BUILDS") ?: null
final WORKSPACE_PLUGINS = System.getenv("WORKSPACE_PLUGINS") ?: null

group = "cloud.grabsky"
version = "1.20.4-${System.getenv("GITHUB_RUN_NUMBER") ?: "DEV"}"

repositories {
    mavenLocal()
    mavenCentral()
    // Repository for the WorldEdit and WorldGuard APIs.
    maven { url = "https://maven.enginehub.org/repo/" }
    // Repository for the Paper API.
    maven { url = "https://papermc.io/repo/repository/maven-public/" }
    // Repository containing the 'bedrock' dependency.
    maven { url = "https://maven.pkg.github.com/grabsky/bedrock"
        credentials {
            username = findProperty("gpr.actor") ?: System.getenv("GITHUB_ACTOR")
            password = findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    // Repository containing the 'configuration' dependency.
    maven { url = "https://maven.pkg.github.com/grabsky/configuration"
        credentials {
            username = findProperty("gpr.actor") ?: System.getenv("GITHUB_ACTOR")
            password = findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    // Repository containing the 'commands' dependency.
    maven { url = "https://maven.pkg.github.com/grabsky/commands"
        credentials {
            username = findProperty("gpr.actor") ?: System.getenv("GITHUB_ACTOR")
            password = findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.28")
    annotationProcessor("org.projectlombok:lombok:1.18.28")
    // Paper
    paperweight.paperDevBundle("1.20.4-R0.1-SNAPSHOT")
    // Dependencies
    implementation("cloud.grabsky:bedrock:1.20.1-47")
    implementation("cloud.grabsky:commands:1.20.1-35")
    implementation("cloud.grabsky:configuration-paper:1.20.1-42")
    // WorldEdit
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.9-SNAPSHOT")
    // Azure
    compileOnly("cloud.grabsky:azure-api:1.20.1-11") { exclude group: "cloud.grabsky", module: "bedrock" }
}

tasks {
    reobfJar { reobfJar.outputJar.get().asFile.renameTo("${rootProject.name}-${project.version}.jar") }
    compileJava {
        options.fork = true
        // Setting compatibility to Java 17 (above should work too).
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}

// Copies produced .jar to $WORKSPACE_BUILDS and $WORKSPACE_PLUGINS directories specified as environment variables.
// This is solely for debugging/development purposes and does nothing when said variables are not set.
tasks.register("deploy") {
    dependsOn(reobfJar)
    doLast {
        // Copying to the builds directory specified by 'WORKSPACE_BUILDS' environment variable.
        if (WORKSPACE_BUILDS != null)
            copy { from(reobfJar) into(WORKSPACE_BUILDS) }
        // Copying to the plugins directory specified by 'WORKSPACE_PLUGINS' environment variable.
        if (WORKSPACE_PLUGINS != null)
            copy { from(reobfJar) into(WORKSPACE_PLUGINS) }
    }
}

paper {
    main = "cloud.grabsky.claims.Claims"
    apiVersion = "1.20"
    // Must be open for NMS to work correctly.
    hasOpenClassloader = true
    serverDependencies {
        "WorldGuard" { load = "BEFORE"; required = true }
        "Azure"      { load = "BEFORE"; required = true }
    }
}